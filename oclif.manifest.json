{"version":"2.1.0","commands":{"sfdx-affirm:changes":{"id":"sfdx-affirm:changes","description":"returns a diff against the specified branch","usage":"<%= command.id %> [-b <string>] [-n <string>] [-d] [-i] [-c] [-s] [-o <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"sfdx-affirm","pluginType":"core","aliases":["affirm:changes"],"examples":["$ sfdx affirm:changes\n            Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n            Git Diff For: remotes/origin/master...pilot/affirm\n            CHANGED: MyClass.cls,MySecondClass.cls\n            INSERTION: MyTestClass.cls\n            DESTRUCTIVE: MyOldClass.cls,MyOldTestClass.cls\n        ","$ sfdx affirm:changes --showdestructive\n            Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n            Git Diff For: remotes/origin/master...pilot/affirm\n            DESTRUCTIVE: MyOldClass.cls\n        ","$ sfdx affirm:changes --showinsertion\n            Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n            Git Diff For: remotes/origin/master...pilot/affirm\n            INSERTION: MyTestClass.cls\n        ","$ sfdx affirm:changes --showchanged\n            Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n            Git Diff For: remotes/origin/master...pilot/affirm\n            CHANGED: MyClass.cls\n        "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"branch":{"name":"branch","type":"option","char":"b","description":"the branch other than remotes/origin/master to diff against"},"inputdir":{"name":"inputdir","type":"option","char":"n","description":"the root directory to compare other than the sfdx-project.json default"},"showdestructive":{"name":"showdestructive","type":"boolean","char":"d","description":"If provided alone shows destructive changes only.","allowNo":false},"showinsertion":{"name":"showinsertion","type":"boolean","char":"i","description":"If provided alone shows insertion changes only.","allowNo":false},"showchanged":{"name":"showchanged","type":"boolean","char":"c","description":"If provided alone shows changes only.","allowNo":false},"silent":{"name":"silent","type":"boolean","char":"s","description":"runs without printing to console","allowNo":false},"outfilename":{"name":"outfilename","type":"option","char":"o","description":"if provided results will be save to a file using the provided name as json"}},"args":[]},"sfdx-affirm:parcel":{"id":"sfdx-affirm:parcel","description":"Creates a parcel (package) using git diff","usage":"<%= command.id %> [-b <string>] [-i <string>] [-o <string>] [-d] [-t <string>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"sfdx-affirm","pluginType":"core","aliases":["affirm:parcel"],"examples":["$ sfdx affirm:parcel\n      Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n      Diff Against: remotes/origin/master...pilot/affirm... Success:\n      Changes: 5, Insertions: 93, Destructive: 7\n      Cloning Files... Success: 100 files ready for convert\n      Converting... Success\n      (y/n) There are 7 destructive changes. Create destructive changes xml file? y\n      ? Select when the destructive changes should be deployed: before\n      Creating Destructive Package... Success: Created at .releaseArtifacts/parcel/destructiveChangesPre.xml\n      Cleaning Up... Success\n    ","$ sfdx affirm:parcel -d -t before\n      Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n      Diff Against: remotes/origin/master...pilot/affirm... Success:\n      Changes: 5, Insertions: 93, Destructive: 7\n      Cloning Files... Success: 100 files ready for convert\n      Converting... Success\n      Creating Destructive Package... Success: Created at .releaseArtifacts/parcel/destructiveChangesPre.xml\n      Cleaning Up... Success\n    "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"branch":{"name":"branch","type":"option","char":"b","description":"The branch other than remotes/origin/master to diff against"},"inputdir":{"name":"inputdir","type":"option","char":"i","description":"The root directory to compare other than the force-app default"},"outputdir":{"name":"outputdir","type":"option","char":"o","description":"The output directory to store the Metadata APIâ€“formatted metadata files in. Default: './parcel'"},"includedestructive":{"name":"includedestructive","type":"boolean","char":"d","description":"If provided and there are destructive changes you will not be asked if you want to include them","allowNo":false},"destructivetiming":{"name":"destructivetiming","type":"option","char":"t","description":"Allows you to indicate if you want to process the destructive changes before or after the deployment. options: before, after","options":["before","after"]}},"args":[]},"sfdx-affirm:quality":{"id":"sfdx-affirm:quality","description":"Validates a package against the provided org","usage":"<%= command.id %> [-d <string>] [-t <string>] [-s] [-w <integer>] [-r] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"sfdx-affirm","pluginType":"core","aliases":["affirm:quality"],"examples":["$ sfdx affirm:quality\n      (y/n) Are you sure you want to validate against myOrg@example.com.sandbox?: y\n      Selected Org: myOrg@example.com.sandbox\n      (y/n) Are you sure you want to validate the package located in the \".releaseArtifacts/parcel\" folder?: y\n      Package Directory: \".releaseArtifacts/parcel\"\n      (y/n) Are you sure you want to validate without running any tests?: y\n      Validating without test classes!\n      Validating Package... Succeeded\n      Deployment Status Date_Time_Id: 2020-08-09_14-21-23_0Af05000000iub1CAA\n      Total Components: 761\n      Component Deployed: 761\n      Component With Errors: 0\n      ? Would you like to print or save the any of the validation results? No\n  ","$ sfdx affirm:quality -u myOrg@example.com.sandbox -t MyTestClass,OtherTestClass -r\n      Selected Org: myOrg@example.com.sandbox\n      (y/n) Are you sure you want to validate the package located in the \".releaseArtifacts/parcel\" folder?: y\n      Package Directory: \".releaseArtifacts/parcel\"\n      Validating Using Provided Classes: MyTestClass,OtherTestClass\n      Validating Package... Succeeded\n      Deployment Status Date_Time_Id: 2020-08-09_14-21-23_0Af05000000iub1CAA\n      Total Components: 761\n      Component Deployed: 761\n      Component With Errors: 0\n    "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"packagedir":{"name":"packagedir","type":"option","char":"d","description":"The root of the directory tree that contains the files to deploy. The root must contain a valid package.xml file describing the entities in the directory structure. default: .releaseArtifacts/parcel. You will always be asked to confirm the path provided before continuing."},"testclasses":{"name":"testclasses","type":"option","char":"t","description":"Comma separated list of tests to run. If none are provided you will be asked to confirm your choice to validate without tests before continuing without tests."},"silent":{"name":"silent","type":"boolean","char":"s","description":"If provided, you will not be prompted at all for input. If correct input isn't provided command fails.","allowNo":false},"waittime":{"name":"waittime","type":"option","char":"w","description":"The number of minutes to wait for the command to complete. The default is 10."},"noresults":{"name":"noresults","type":"boolean","char":"r","description":"If provided, you will not be asked if you would like to print the component details or test details after validation completes.","allowNo":false}},"args":[]},"sfdx-affirm:suite":{"id":"sfdx-affirm:suite","description":"Creates a testSuite-meta.xml file with the provided list of tests.","usage":"<%= command.id %> [-t <string>] [-n <string>] [-o <string>] [-a] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"sfdx-affirm","pluginType":"core","aliases":["affirm:suite"],"examples":["$ sfdx affirm:suite\n    Please provide a comma separated list of the test names to add to the suite: testClassNameOne,TestClassNameTwo\n    Creating Test Suite... Success\n    New Test Suite Written to: force-app/main/default/testSuites/pjname_XXXX_name_of_branch.testSuite-meta.xml\n    ","$ sfdx affirm:suite --tests testClassNameOne,TestClassNameTwo\n    Found existing suite at force-app/main/default/testSuites/pjname_XXXX_name_of_branch.testSuite-meta.xml\n    ? Would you like to update the list of tests, overwrite it completely, or keep the current list and exit? Update\n    Creating Test Suite... Success\n    New Test Suite Written to: force-app/main/default/testSuites/pjname_XXXX_name_of_branch.testSuite-meta.xml\n    ","$ sfdx affirm:suite --addtotests -t testClassNameOne,TestClassNameTwo\n    Creating Test Suite... Success\n    New Test Suite Written to: force-app/main/default/testSuites/myCustomTestSuite.testSuite-meta.xml\n    "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"tests":{"name":"tests","type":"option","char":"t","description":"Comma separated list of tests names that will be used to create the test suite. If none are provided you will be asked to provide a list or exit."},"name":{"name":"name","type":"option","char":"n","description":"Optional: Provide if you would like to define the name of your test suite. Default: name of current branch minus 'feature/'"},"outputdir":{"name":"outputdir","type":"option","char":"o","description":"Optional: Provide if you would like to save the testSuite-meta.xml file to a location other than force-app/main/default/testSuites"},"addtotests":{"name":"addtotests","type":"boolean","char":"a","description":"Optional: Indicates that you would like the provided tests to be added to the existing test suite instead of overwriting it.","allowNo":false}},"args":[]},"sfdx-affirm:tests":{"id":"sfdx-affirm:tests","description":"Allows user to easily run the relevant tests for their current branch.","usage":"<%= command.id %> [-l <string>] [-w <integer>] [-r] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"sfdx-affirm","pluginType":"core","aliases":["affirm:tests"],"examples":["$ sfdx affirm:tests\n      (y/n) Are you sure you want to run tests against myOrg@example.com.sandbox?: y\n      Selected Org: myOrg@example.com.sandbox\n      (y/n) Could not find test suite for the current branch. Would you like to provide a list of test classes now?: y\n      Please provide a comma separated list of tests names: MyTestClassName,OtherTestClassName\n      Count of Test Classes: 2\n      Test Classes: MyTestClassName,OtherTestClassName\n      Running Tests... Done\n      Outcome: Passed\n      Tests Ran: 10\n      Passing: 10\n      Failing: 0\n      Skipped: 0\n      PassRate: 100%\n      FailRate: 0%\n      Test Total Time: 27317 ms\n      (y/n) Would you like to print the results of each test?: n\n    ","$ sfdx affirm:tests -u myOrg@example.com.sandbox\n      Selected Org: myOrg@example.com.sandbox\n      Found Test Suite for Current Branch: testSuites/pjname_XXXX_name_of_branch.testSuite-meta.xml\n      Count of Test Classes: 2\n      Test Classes: MyTestClassName,OtherTestClassName\n      Running Tests... Done\n      Outcome: Passed\n      Tests Ran: 16\n      Passing: 16\n      Failing: 0\n      Skipped: 0\n      PassRate: 100%\n      FailRate: 0%\n      Test Total Time: 72004 ms\n      (y/n) Would you like to print the results of each test?: n\n    "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"list":{"name":"list","type":"option","char":"l","description":"Comma separated list of tests names that will be used to create the test suite. If none are provided you will be asked to provide a list or exit."},"waittime":{"name":"waittime","type":"option","char":"w","description":"The number of minutes to wait for the command to complete. The default is 10."},"printresults":{"name":"printresults","type":"boolean","char":"r","description":"If provided test results will be printed without being prompted.","allowNo":false}},"args":[]},"sfdx-affirm:suite:merge":{"id":"sfdx-affirm:suite:merge","description":"Creates or Updates a testSuite-meta.xml file using the tests from all inserted or changed test suite files in the current branch","usage":"<%= command.id %> [-n <string>] [-o <string>] [-n <string>] [-b <string>] [-l] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"sfdx-affirm","pluginType":"core","aliases":["affirm:suite:merge"],"examples":["$ sfdx affirm:suite:merge\n    Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n    Git Diff For: remotes/origin/master...pilot/affirm\n    The following 3 test suite(s) will me merged into the name-of-epic-branch test suite\n    force-app/main/default/testSuites/SFDC_1###_some_branch.testSuite-meta.xml\n    force-app/main/default/testSuites/SFDC_2###_some_branch1.testSuite-meta.xml\n    force-app/main/default/testSuites/SFDC_3###_some_branch2.testSuite-meta.xml\n    Creating Test Suite... Success\n    New Test Suite Written to: force-app/main/default/testSuites/name-of-epic-branch.testSuite-meta.xml\n    ","$ sfdx affirm:suite:merge -n funky_suite_name\n    Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n    Git Diff For: remotes/origin/master...pilot/affirm\n    The following 2 test suite(s) will me merged into the funky_suite_name test suite\n    force-app/main/default/testSuites/SFDC_1###_some_branch.testSuite-meta.xml\n    force-app/main/default/testSuites/SFDC_2###_some_branch1.testSuite-meta.xml\n    Creating Test Suite... Success\n    New Test Suite Written to: force-app/main/default/testSuites/funky_suite_name.testSuite-meta.xml\n    ","$ sfdx affirm:suite:merge -o .releaseArtifacts/tests\n    Current Remote: origin => git@bitbucket.org:projectName/repo-name.git\n    Git Diff For: remotes/origin/master...pilot/affirm\n    The following 2 test suite(s) will me merged into the name-of-epic-branch test suite\n    force-app/main/default/testSuites/SFDC_1###_some_branch.testSuite-meta.xml\n    force-app/main/default/testSuites/SFDC_2###_some_branch1.testSuite-meta.xml\n    Creating Test Suite... Success\n    New Test Suite Written to: .releaseArtifacts/tests/name-of-epic-branch.testSuite-meta.xml\n    "],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"name":{"name":"name","type":"option","char":"n","description":"Optional: Provide if you would like to define the name of your test suite. Default: name of current branch minus 'feature/'"},"outputdir":{"name":"outputdir","type":"option","char":"o","description":"Optional: Provide if you would like to save the testSuite-meta.xml file to a location other than force-app/main/default/testSuites"},"inputdir":{"name":"inputdir","type":"option","char":"n","description":"Optional: the root directory to compare other than the sfdx-project.json default"},"branch":{"name":"branch","type":"option","char":"b","description":"Optional: the branch other than remotes/origin/master to diff against"},"list":{"name":"list","type":"boolean","char":"l","description":"Optional: if provided the tests will not be merged into a single suite, rather they will be collected and printed","allowNo":false}},"args":[]}}}